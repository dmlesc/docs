https://ubuntu.com/server/docs/security-firewall


===========================
 pi4 - ubuntu server 22.04
===========================

hostnamectl set-hostname pir0
nano /lib/systemd/system/systemd-networkd-wait-online.service
  ExecStart=/lib/systemd/systemd-networkd-wait-online --timeout=1

visudo
  dml ALL=(ALL) NOPASSWD: ALL

apt install bridge-utils

nano /etc/netplan/50-cloud-init.yaml

network:
  wifis:
    wlan0:
      dhcp4: true
      dhcp6: no
      access-points:
        ap_name:
          password: password
  ethernets:
    eth0:
      dhcp4: true
      dhcp6: no
      optional: true
  bridges:
    br0:
      interfaces: [eth0]
      addresses:
       - 10.0.0.1/24
  version: 2

cat >> /etc/netplan/00-router-config.yaml <<EOF
network:
  wifis:
    wlp4s0:
      dhcp4: true
      dhcp6: no
      access-points:
        ap_name:
          password: password
  ethernets:
    enp1s0:
      dhcp4: true
      dhcp6: no
      optional: true
    enp3s0:
      dhcp4: true
      dhcp6: no
      optional: true
  bridges:
    br0:
      interfaces: [enp1s0, enp3s0]
      addresses:
       - 10.0.0.1/24
  version: 2
EOF

netplan generate
netplan apply
reboot

nano /etc/default/ufw
  DEFAULT_FORWARD_POLICY="ACCEPT"

nano /etc/ufw/sysctl.conf
  net/ipv4/ip_forward=1

nano /etc/ufw/before.rules #Add to top after header comments
  *nat
  :POSTROUTING ACCEPT [0:0]
  -A POSTROUTING -s 10.0.0.0/24 -o wlan0 -j MASQUERADE
  COMMIT

ufw disable && ufw enable
ufw allow 22

systemctl enable ufw.service


apt install isc-dhcp-server
nano /etc/dhcp/dhcpd.conf
subnet 10.0.0.0 netmask 255.255.255.0 {
  range 10.0.0.10 10.0.0.20;
  option routers 10.0.0.1;
  option domain-name-servers 8.8.8.8, 8.8.4.4;
  option domain-name "dmlesc.me";
}

nano /etc/default/isc-dhcp-server
  INTERFACESv4="br0"
  #INTERFACESv4="enp3s0"

systemctl restart isc-dhcp-server.service
systemctl enable isc-dhcp-server

wget -O /usr/local/etc/oui.txt http://standards-oui.ieee.org/oui.txt

dhcp-lease-list --lease /var/lib/dhcp/dhcpd.leases


=====================
 ubuntu server 20.04
=====================

nano /lib/systemd/system/systemd-networkd-wait-online.service
  ExecStart=/lib/systemd/systemd-networkd-wait-online --timeout=1

visudo
  dml ALL=(ALL) NOPASSWD: ALL

apt install wpasupplicant wireless-tools
apt install bridge-utils

nano /etc/netplan/00-installer-config.yaml

network:
  wifis:
    wlp4s0:
      dhcp4: true
      dhcp6: no
      access-points:
        ap_name:
          password: password
  ethernets:
    enp2s0:
      dhcp4: true
      dhcp6: no
      optional: true
    enp3s0:
      dhcp4: true
      dhcp6: no
      optional: true
  bridges:
    br0:
      interfaces: [enp2s0, enp3s0]
      addresses:
       - 10.0.0.1/24
  version: 2
  renderer: networkd


netplan generate
netplan apply
reboot

nano /etc/default/ufw
  DEFAULT_FORWARD_POLICY="ACCEPT"

nano /etc/ufw/sysctl.conf
  net/ipv4/ip_forward=1

nano /etc/ufw/before.rules #Add to top after header comments
  *nat
  :POSTROUTING ACCEPT [0:0]
  -A POSTROUTING -s 10.0.0.0/24 -o wlp2s0 -j MASQUERADE
  COMMIT


ufw disable && ufw enable
ufw allow 22

systemctl enable ufw.service

apt install isc-dhcp-server
nano /etc/dhcp/dhcpd.conf
  subnet 10.0.0.0 netmask 255.255.255.0 {
    range 10.0.0.10 10.0.0.20;
    option routers 10.0.0.1;
    option domain-name-servers 8.8.8.8, 8.8.4.4;
    option domain-name "dmlesc.me";
  }

nano /etc/default/isc-dhcp-server
  #INTERFACESv4="enp3s0"
  INTERFACESv4="br0"

systemctl restart isc-dhcp-server.service
systemctl enable isc-dhcp-server

wget -O /usr/local/etc/oui.txt http://standards-oui.ieee.org/oui.txt

dhcp-lease-list --lease /var/lib/dhcp/dhcpd.leases




cd ~/git
rsync -zvhr --update --delete router fw0:~/

ssh mob0
sudo su -
mkdir /data_metrics
mkdir /data_metrics/prometheus
chown nobody:nogroup /data_metrics/prometheus
mkdir /data_metrics/grafana
chown 472:472 /data_metrics/grafana

exit

docker-compose up -d

rsync -zvhr --update --delete ~/router/scripts esc0:~/

ufw allow from 172.0.0.0/8 to 10.0.0.1 port 9100
ufw allow 3000
ufw allow 9090

ufw allow proto tcp from 192.168.50.71 to 192.168.50.120 port 22
ufw allow proto tcp from 10.0.0.0/24 to 10.0.0.1 port 22


docker run -it --rm -v "$(pwd)"/data:/data handbrake bash
HandBrakeCLI -Z "Apple 720p30 Surround" -i test.mkv -o test.m4v

===================
 raspbian - docker
===================

curl -fsSL https://get.docker.com -o get-docker.sh
sh ./get-docker.sh

======================
 raspbian - Routed AP
======================

https://www.raspberrypi.org/documentation/computers/configuration.html#setting-up-a-routed-wireless-access-point


sudo apt update
sudo apt upgrade

sudo apt install hostapd

sudo systemctl unmask hostapd
sudo systemctl enable hostapd

sudo apt install dnsmasq

sudo DEBIAN_FRONTEND=noninteractive apt install -y netfilter-persistent iptables-persistent

sudo nano /etc/dhcpcd.conf
interface wlan0
  static ip_address=172.16.0.1/24
  nohook wpa_supplicant

sudo nano /etc/sysctl.d/routed-ap.conf
  net.ipv4.ip_forward=1

sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
sudo netfilter-persistent save

sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig
sudo nano /etc/dnsmasq.conf
interface=wlan0
dhcp-range=172.16.0.10,172.16.0.20,255.255.255.0,24h
domain=wlan
address=/pi0/172.16.0.1

sudo rfkill unblock wlan

sudo nano /etc/hostapd/hostapd.conf
country_code=US
interface=wlan0
ssid=esc
hw_mode=a
channel=44
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=FuckyouD!
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP


sudo systemctl reboot


=====
 Kea
=====

apt update && apt -y install kea

sed -i 's|dhcp6=yes|dhcp6=no|' /etc/kea/keactrl.conf
sed -i 's|ctrl_agent=yes|ctrl_agent=no|' /etc/kea/keactrl.conf

mv /etc/kea/kea-dhcp4.conf /etc/kea/kea-dhcp4.conf.bak
cat >> /etc/kea/kea-dhcp4.conf <<EOF
{
    "Dhcp4": {
        "interfaces-config": {
            "interfaces": [ "br0" ],
            "dhcp-socket-type": "raw"
        },
        "valid-lifetime": 4000,
        "renew-timer": 1000,
        "rebind-timer": 2000,
        "subnet4": [{
           "pools": [ { "pool": "10.0.0.10-10.0.0.20" } ],
           "subnet": "10.0.0.0/24"
        }],

       # Now loggers are inside the DHCPv4 object.
       "loggers": [{
            "name": "*",
            "severity": "DEBUG"
        }]
    }
}
EOF

systemctl enable kea-dhcp4-server
systemctl disable kea-dhcp6-server
systemctl disable kea-dhcp-ddns-server
systemctl enable kea-ctrl-agent
